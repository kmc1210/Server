+ XHR 객체 메소드

  - void open( String method, String url, [, boolean asynch ] )
        AJAXZ 요청 정보를 초기화하는 함수
        요청 정보에 알맞게 설정하는 함수
        
        method - HTTP 요청 메소드를 지정
        url    - HTTP 요청 URL을 지정    
        asynch - true(비동기식), false(동기식) [기본값: true]
        
        ** asych 를 동기식(false)로 설정하면 요청에 대한 응답이 완료될 때까지
           브라우저는 대기상태(BLOCKED)가 
           
   - void send(null)
        GET 요청 전송 함수
        전달파라미터는 open() 함수의 url 지정할 때 쿼리스트링으로 포함시킨다
   
   
   - void send(params)
        POST 요청 전송 함수
        전달파라미터를 쿼리스트링 형식의 문자열로 params로 넣어 포함시킨다
        
+ JSON, JavaScript Object Notation

   - 자바스크립트 객체 표기법
   
   - http://json.org/json-ko.html
   
   - 통신을 할 때 데이터를 전달하기 위한 데이터 표기법으로 사용된다
   
   - 통신에 참여하는 모든 시스템(각종 프로그래밍 언어)들이 공통적으로 이해할 수 있는
     데이터타입 표기법으로 자바스크립트 객체 표기법을 사용하는 것
     
     
+ JSON의 데이터 표현 방식

   - 객체, Object
           클래스, 구조체, Map, HashTable 등을 표현할 때 사용함
           
           {}로 감싸서 객체를 표현한다
           
           프로퍼티는 name : value 형태의 쌍으로 표현한다
           
           name은 문자열로 표현, value는 어떤 타입이든지 허용
           
           여러 개의 프로퍼티를 표현할 때 각 프로퍼티들을 , 로 구분한다
           
           ex)    빈 객체  - {}
           ex)    { "key1":"value1", "key2":obj, "key3":123, ... }
--------------------------------------------------------------------------           
ex)
           class Test{
            private int num;
            private String data;
           }
           
           Test t1 = new Test();
           
           t1.num = 100;
           t1.data = "Apple"; 
           --------------------------------------------
           -> Jason 형태
           
           { "num" : 100, "data" : "Apple" )
           ---------------------------------------------
           
           Map map = new HashMap();
           
           map.put("num", 100);
           map.put("data", "Apple");
--------------------------------------------------------------------------           
   - 배열, Array
          배열, ArrayList, List, Vector, Sequnce 등을 표현할 때 사용
          
          [] 로 감싸서 표현
          
          key값 없이 요소(데이터)만 나열하여 표현함
          
          ex)       빈 배열 - []
          
          ex)       [ "value1", "value2", obj, 123, ... ]
   
   - 문자열, String
          "data"
          
   - 숫자, Number
          data
          
   - true, false, null
          
          
+ 마샬링, Marshalling
  - 데이터를 전달하기 위해서 특정 표기법으로 변환하는 것
  - Java 데이터 -> JSON 표기법 (Server, Servlet, JSP)
  
  - Javascript 데이터 -> JSON 표기법 (Client)
  
  - JSON 형식을 주로 사용하고 XML 형식을 사용하기도 한다
  
+ 언마샬링, Unmarshalling
  - 마샬링되어 전달된 데이터를 자신의 시스템(프로그래밍 언어)에 맞게 복원하는 것
  
+ 직렬화
  - 스트림을 통해 데이터를 전송하기 위해 데이터를 1바이트 단위로 잘게 나누는 것
  
  
+ 역직렬화
  - 스트림을 통해 전송된 데이터를 수신하기 위해서 1바이트 단위 데이터들을 원본 형태로 복원하는 것
** 원본데이터 -> 마샬링 -> 직렬화 -> 송신 -> 수신 -> 역직렬화 -> 언마샬링 -> 데이터    

+ GSON API 라이브러리

  - 구글에서 제공하는 JSON 관련 자바 라이브러리
  
  - JAVA 데이터 <-> JSON 변환을 도와주는 라이브러리
  
  - 자바언어의 데이터를 마샬링, 언마샬링할 수 있도록 도와준다
  
+ GSON 라이브러리 다운받기

  - https://mvnrepository.com/ 접속 (메이븐 저장소)
    
    ** 메이븐(MAVEN) - 빌드 관리자
    
    ** 빌드(Build) - 실행가능 형태의 결과물을 만드는 작업
       라이브러리 코드와 개발한 코드가 결합되는 과정
       
    ** 메이븐은 프로그램에서 사용한 추가 라이브러리들을 관리한다   
  
- gson 검색

- gson 항목 클릭 ( 구글 마크 있는 걸로)

- 2.8.6 클릭

- Files 항목에 있는 jar버튼 클릭

- 다운된 파일 사용 : gson-2.6.8.jar

